# -*- coding: utf-8 -*-
"""YOLO.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sdVo8u-TaVP8n2Oj3iN3UQ9G9JED9gFg
"""

!unzip '/content/yolo-project.zip'

from PIL import Image
import cv2
import numpy as np

image = Image.open('/content/yolo-test-image4.jpg')
div=image.size[0]/500
resized_image = image.resize((round(image.size[0]/div),round(image.size[1]/div)))
resized_image.save('na.jpg')

classes_names=['person','bicycle','car','motorbike','aeroplane','bus','train','truck','boat','traffic light','fire hydrant','stop sign','parking meter','bench','bird','cat','dog','horse','sheep','cow','elephant','bear','zebra','giraffe','backpack','umbrella','handbag','tie','suitcase','frisbee','skis','snowboard','sports ball','kite','baseball bat','baseball glove','skateboard','surfboard','tennis racket','bottle','wine glass','cup','fork','knife','spoon','bowl','banana','apple','sandwich','orange','broccoli','carrot','hot dog','pizza','donut','cake','chair','sofa','pottedplant','bed','diningtable','toilet','tvmonitor','laptop','mouse','remote','keyboard','cell phone','microwave','oven','toaster','sink','refrigerator','book','clock','vase','scissors','teddy bear','hair drier','toothbrush']

model=cv2.dnn.readNet("/content/yolov3.weights","/content/yolov3.cfg")
layer_names = model.getLayerNames()
output_layers=[layer_names[i[0]-1]for i in model.getUnconnectedOutLayers()]

print(model)

print(layer_names)

print(output_layers)

image=cv2.imread("/content/na.jpg")
height, width, channels = image.shape

print(height)
print(width)
print(channels)

blob=cv2.dnn.blobFromImage(image, 0.00392, (416,416), (0,0,0), True, crop=False)
model.setInput(blob)
outputs= model.forward(output_layers)
class_ids = []
confidences = []
boxes = []

for output in outputs:
  for identi in output:
    scores = identi[5:]
    class_id = np.argmax(scores)
    confidence = scores[class_id]
    if confidence > 0.8:
      centerx = int(identi[0] * width)
      centery = int(identi[1] * height)
      w = int(identi[2] * width)
      h = int(identi[3] * height)
                # Rectangle coordinates
      x = int(centerx - w / 2)
      y = int(centery - h / 2)
      boxes.append([x, y, w, h])
      confidences.append(float(confidence))
      class_ids.append(class_id)

indexes = cv2.dnn.NMSBoxes(boxes, confidences, 0.5, 0.4)
font = cv2.FONT_HERSHEY_COMPLEX
colors = np.random.uniform(0, 255, size=(len(classes_names), 3))

for i in range(len(boxes)):
  if i in indexes:
    x, y, w, h = boxes[i]
    confidence = str("{:.2f}".format(confidences[i]))
    label = str(classes_names[class_ids[i]]+confidence)
    color = colors[i]
    
    cv2.rectangle(image, (x, y), (x + w, y + h), color, 1)
    cv2.putText(image, label,(x, y + 20), font, 1, color, 2)

from google.colab.patches import cv2_imshow

cv2_imshow(image)
cv2.waitKey(0)
cv2.destroyAllWindows()